/*********************************************************************************************//**
 * @file
 *
 * @brief       Tekst glavne stranice
 *
 * @mainpage    eSolid - Event Based System (UNDER CONSTRUCTION)
 *
 * @section     intro_sec Uvod
 *
 *              @a embeddedSolid (eSolid) operativni sistem poboljsava
 *              produktivnost, jer programeri ne moraju vise da razmisljaju o
 *              nekoliko nivoa <c>if-then-else</c> zamrsenog programskog koda i
 *              ne trebaju da vode racuna o semaforima, mutexima i drugim
 *              mehanizmima koji se koriste u tradicionalnim real time
 *              operativnim sistemima. Umesto toga, programeri mogu da
 *              razmisljaju na visem nivou abstrakcije i na taj nacin se
 *              usredsrede na resavanju postavljenih problema. eSolid
 *              operativni sistem je spoj arhitektura pogonjene dogadjajima
 *              (Event Driven Architecture - EDA) sa servisno orijentisano
 *              arhitekturama (Service Oriented Architecture - SOA). Servisna
 *              orijentacija je arhitekturni koncept koji propagira labavu
 *              spregu izmedju servisa i klijenta. Klijent samo zna sta servis
 *              pruza i kako da ga pozove.
 *
 * @section     main_howItBegan Kako je sve pocelo?
 *
 *              U toku rada na aplikaciji od posebnog znacaja, koju razvijam sa
 *              prijateljem i kolegama, javila se potreba za konkurentnim
 *              izvrsavanjem vise zadataka u nasem sistemu. U tom trenutku nismo
 *              bili za ideju da se u sistem implementira jedan od gotovih real
 *              time operativnih sistema jer su pocetna istrazivanja pokazala da
 *              bi njihova implementacija oduzela poprilicnu kolicinu resursa sa
 *              kojima smo raspolagali u vrlo ogranicenom mikrokontroleru po
 *              pitanju velicine RAM i FLASH memorije. Zbog toga se pribeglo
 *              ideji da se koriste konacni automati za svaki proces i na taj
 *              nacin ostvari privid konkurentnog izvrsavanja. Kako je vreme
 *              odmicalo ideje za implementaciju konacnih automata su se menjale
 *              dok se nismo zadrzali na implementaciji automata koju koristi
 *              QP(TM) framework firme Quantum Leaps
 *              (http://www.state-machine.com). QP framework se izdaje pod
 *              GPLv2 licencom i inicijalna ideja eSolid projekta je da se QP
 *              framework prilagodi potrebama nase aplikacije. Medjutim, kako
 *              je vreme odmicalo i razvoj aplikacije je napredovao, zahtevi
 *              aplikacije su se progresivno povecali i dosli smo do trenutka
 *              kada QP framework nije mogao da zadovolji sve postavljene
 *              zahteve. Tada su prekinute dalje aktivnosti prilagodjenja QP
 *              frameworka i krenulo se sa istrazivanjem u cilju razvoja
 *              operativnog sistema koji bi u potpunosti zadovoljio postavljene
 *              zahteve aplikacije.
 *
 * @section     main_EDA_system Sistem pogonjen dogadjajima
 *
 *              Razvoj eSolid operativnog sistema je vodjen idejama i konceptima
 *              koji su publikovani od strane: IBM-a (sistemi za procesiranje
 *              dogadjaja), konceptima koje propagira The Event Processing
 *              Technical Society drustvo i ideja raznih autora. Iako su njihovi
 *              koncepti pre svega namenjeni za velike, distribuirane sisteme,
 *              gde ne postoji deficit procesnih mogucnosti i memorijskih
 *              kapaciteta, preuzeto je dosta ideja i termina iz njihovih
 *              publikacija.
 *
 * @section     main_events Dogadjaji
 *
 * @subsection  main_whatIsEvt Sta je dogadjaj?
 *
 *              Dogadjaj je stvar od posebne vaznosti koja se desila ili se
 *              desava. Dogadjaj se desava u potpunosti ili se uopste ne desava,
 *              a znacajan je zbog toga sto moze da utice na neku akciju.
 *              Dogadjaj se desava kada neki pojam postaje istinit ili kada se
 *              javi tranzicija entiteta u stvarnom svetu. Pojam dogadjaj se
 *              cesto istovremeno koristi za opis specifikacije (definiciju)
 *              dogadjaja i individualnu pojavu (instancu) dogadjaja.
 *
 * @subsection  main_whatIsInEvt Sta je u dogadjaju?
 *
 *              Svaka instanca dogadjaja poseduje zaglavlje dogadjaja i telo
 *              dogadjaja.
 *
 *              - Zaglavlje sadrzi elemente koji opisuju instancu dogadjaja, kao
 *              sto su identifikator dogadjaja, tip dogadjaja, ime dogadjaja,
 *              vremenski marker nastanka dogadjaja, broj instance dogadjaja i
 *              generator dogadjaja. Zaglavlje je isto za sve dogadjaje koji se
 *              javljaju u sistemu. Ukoliko dogadjaj sadrzi samo zaglavlje, tada
 *              se takav dogadjaja zove @a signal. eSolid definise nekoliko
 *              razlicitih zaglavlja dogadjaja. Pogledati @ref eot_evt_repr.
 *              - Telo dogadjaja opisuje sta se dogodilo. Telo dogadjaja mora da
 *              bude potpuno opisano tako da bilo koje trece lice koje zanima
 *              ovaj dogadjaj, takodje, moze da ga razume.
 *
 * @subsection  main_evt_lifecycle Zivotni ciklus dogadjaja
 *
 *              Zivotni ciklus dogadjaja se sastoji od:
 *              - kreiranje dogadjaja. Kreiranje dogadjaja obavljaju generatori
 *              ili proizvodjaci dogadjaja. Proizvodjac dogadjaja kreira
 *              dogadjaje koje predaje, putem kanala dogadjaja, bilo kojoj
 *              zainteresovanoj stranci. Postoje dva modela transporta dogadjaja,
 *              a to su "push" i "pull" modeli. Oni ce biti objasnjeni kasnije.
 *              Proizvodjaci dogadjaja mogu da budu:
 *                  - hardverski prekidi
 *                  - funkcije
 *                  - agenti za obradu dogadjaja
 *              - transport dogadjaja. Transport dogadjaja obavlja operativni
 *              sistem. Pored transporta ujedno se moze obaviti i filtriranje
 *              dogadjaja.
 *              - obrada dogadjaja. Dogadjaje obradjuju potrosaci. Kao rezultat
 *              obrade moze se kreirati nov dogadjaj ili obaviti neka akcija.
 *              Potrosaci dogadjaja mogu biti samo agenti za obradu dogadjaja.
 *              - destrukcija dogadjaja. Destrukciju dogadjaja obavlja sam
 *              operativni sistem kada je detektovano da su svi agenti za obradu
 *              dogadjaja zavrsili sa njegovom obradom.
 *
 * @subsection  main_evt_proc_types Tipovi obrade dogadjaja
 *
 *              Funkcije obrade dogadjaja se mogu svrstati u dve grupe:
 *              - Jednostavna obrada dogadjaja (Simple Event Processing):
 *              dogadjaji koji ne predstavljaju ili oznacavaju niz drugih
 *              dogadjaja, ne filtriraju se i rutiraju se bez izmena.
 *              - Slozena obrada dogadjaja (Complex Event Processing): detektuju
 *              se nekoliko obrazaca koji se koriste se kreiraju novi kompleksni
 *              dogadjaji. Dakle, kompleksni dogadjaj je dogadjaj koji
 *              predstavlja ili oznacava drugi skup dogadjaja.
 *
 * @section     main_epe Agenti za obradu dogadjaja
 *
 *              Agenti za obradu dogadjaja su opisani u odeljku @ref doc_epe.
 *
 * @section     main_sections Sastavni delovi eSolid jezgra (kernel)
 *
    Jezgro eSolid operativnog sistema se sastoji od sledecih delova:
    - @ref doc_eot@n
    objašnjenje tipova dogadjaja, njihovo definisanje i osnovne manipulacije nad 
    dogadjajima,
    - @ref doc_smp@n
    koncept izvrsne jedinice, tipovi izvrsne jedinice i njihovo pokretanje,
    - @ref doc_epe@n
    koncept agenta za obradu dogadjaja, konkuretan rad razlicitih tipova agenta,
    - @ref doc_smm@n
    menadzment memorijskog prostora, ovaj modul koriste svi ostali moduli za
    potrebe rezervisanja memorije,
    - @ref doc_epn@n
    formiranje povezane mreže EPA objekata i transfer dogadjaja izmedju objekata,
    - @ref doc_tem@n
    menadzment i generisanje dogadjaja u tacno definisanim vremenskim trenucima,
    - @ref doc_str@n
    sistem za debagovanje i kontrolu embedded sistema sa eSolid-om.
 
 * @image       html eSolid.png
 *
 *              @ref page1
 *
 *              @ref page2
 *
 *              @ref page3
 *
 *              @ref page4
 *
 * @author      Nenad Radulović
 *
 *              Contact information:
 *              - web site:  http://blueskynet.dyndns-server.com
 *              - e-mail:    blueskyniss@gmail.com
 *
 *************************************************************************************************/
