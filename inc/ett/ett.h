/*************************************************************************************************
 * This file is part of eSolid
 *
 * Copyright (C) 2011 - Nenad Radulovic
 *
 * eSolid is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * eSolid is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with eSolid; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor,
 * Boston, MA  02110-1301  USA
 *************************************************************************************************/


/*********************************************************************************************//**
 * @file
 *
 * @author      Dejan
 *
 * @brief       Interfejs ETT modula.
 *
 * ------------------------------------------------------------------------------------------------
 *
 * @addtogroup  ett_intf
 *
 ****************************************************************************************//** @{ */


#ifndef ETT_FUNCTIONS_H_
#define ETT_FUNCTIONS_H_


/*************************************************************************************************
 * INCLUDE FILES
 *************************************************************************************************/

/*-----------------------------------------------------------------------------------------------*
 * Module dependencies
 *-----------------------------------------------------------------------------------------------*/

#include "hal/hal.h"
#include "dbg/dbg.h"


/*-----------------------------------------------------------------------------------------------*
 * Module configuration and adapter
 *-----------------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------------*
 * EXTERNS
 *-----------------------------------------------------------------------------------*//** @cond */

#ifdef ETT_FUNCTIONS_H_VAR
#define ETT_FUNCTIONS_H_EXT
#else
#define ETT_FUNCTIONS_H_EXT extern
#endif


/** @endcond*//***********************************************************************************
 * DEFINES
 *************************************************************************************************/


/*************************************************************************************************
 * MACRO's
 *************************************************************************************************/


/*-----------------------------------------------------------------------------------------------*
 * C/C++ #ifdef - open
 *-----------------------------------------------------------------------------------------------*/
#ifdef __cplusplus
extern "C" {
#endif


/*************************************************************************************************
 * DATA TYPES
 *************************************************************************************************/

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       NEDOKUMENTOVANO
 */
/*-----------------------------------------------------------------------------------------------*/
typedef enum BufferStatus_tag {
/**
 * @brief       NEDOKUMENTOVANO
 */
    ETT_NO_FILLED,

/**
 * @brief       NEDOKUMENTOVANO
 */
    ETT_FILLED
} BufferStatus_T;

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       NEDOKUMENTOVANO
 */
/*-----------------------------------------------------------------------------------------------*/
typedef struct EPPdata_tag {
    uint16_t    dataSize;
    uint8_t     type;
    uint16_t    id;
    uint32_t    timeStamp;
    uint32_t    transmitter;
    uint8_t     ext[5];
} EPPdata_T;


/*************************************************************************************************
 * GLOBAL VARIABLES
 *************************************************************************************************/


/*************************************************************************************************
 * FUNCTION PROTOTYPES
 *************************************************************************************************/

/*-----------------------------------------------------------------------------------------------*/
/**
 *  @brief       Oznacava pocetak STP paketa(upisicanje u bafer, ili slanje).
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_StartProcesingStpData(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Upislvanje bloka STP podatka.
 *
 * @param       pSTPdata                  Pokazivac na blok sa podacima.
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_ProcessingStpData(
    uint8_t     * pSTPdata);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Prekid procesiranja STP podataka insertuje 0x3e i racuna CRC.
 *
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_StopProcessingStpData(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Procesiranje EPP podataka.
 *
 * @param       pEPPdata               Pokazivac na EPP data blok.
 */
/*-----------------------------------------------------------------------------------------------*/
BufferStatus_T eS_ProcessingEppData(
    EPPdata_T   * pEPPdata);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Vrsi Konfiguraciju ETT modula.
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_ettConfiguration(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Prekid procesiranja STP podataka insertuje 0x3e i racuna CRC.
 * @note        Poziva se od strane makroa @c STOP_PROCESSING_STP_DATA().
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_StopProcessingStpData(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Izvrsavanje funkcija za slanje  i primanjebajta,
 *              ili slanja RESPONSE odgovora.
 *
 * @note        Ova funkcija se poziva od strane Usart1 interapt rutine,
 *              koju trigeruje USART1_TC flag.
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_isr_ettTaskExecutor(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Obrada ulaznih podataka po EET protokolu.
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_isr_ProcessInputEvent(
    void);

/*-----------------------------------------------------------------------------------------------*/
/**
 * @brief       Vrsi incrementiranje TimeOutCounter-a koji se koristi u funkciji
 *              isr_getByte().
 *
 * @note        Ova funkcija se poziva od strane SysTick interapt rutine.
 */
/*-----------------------------------------------------------------------------------------------*/
void eS_isr_UpdateTimeOutCounter(
    void);


/*-----------------------------------------------------------------------------------------------*
 * C/C++ #endif - close
 *-----------------------------------------------------------------------------------------------*/
#ifdef __cplusplus
}
#endif


/*************************************************************************************************
 * CONFIGURATION ERRORS
 *************************************************************************************//** @cond */


/** @endcond *//** @} *//*************************************************************************
 * END of ett.h
 *************************************************************************************************/
#endif /* ETT_FUNCTIONS_H_ */
