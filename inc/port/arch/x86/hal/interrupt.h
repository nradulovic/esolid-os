/*************************************************************************************************
 * Standard header file: interrupt.h
 * This file is part of lcsw-eSolid
 *
 * Template version 1.1.5 (29.12.2011)
 *
 * Copyright (C) 2011 - Nenad RaduloviÄ‡
 *
 * lcsw-eSolid is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * lcsw-eSolid is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with lcsw-eSolid; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor,
 * Boston, MA  02110-1301  USA
 *************************************************************************************************/


/*********************************************************************************************//**
 * @file
 *
 * @version     {version}
 * @date        Jan 4, 2012
 * @author      nesa
 *
 * @brief       Interfejs Interrupt modula za x86 arhitekturu, port klasa:
 *              arhitektura.
 *
 * ------------------------------------------------------------------------------------------------
 *
 * @addtogroup  intr_intf
 *
 ****************************************************************************************//** @{ */


#ifndef INTERRUPT_H_
#define INTERRUPT_H_


/*************************************************************************************************
 * INCLUDE FILES
 *************************************************************************************************/

/*-----------------------------------------------------------------------------------------------*
 * Module dependencies
 *-----------------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------------*
 * Module configuration and adapter
 *-----------------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------------*
 * EXTERNS
 *-----------------------------------------------------------------------------------*//** @cond */


#ifdef INTERRUPT_H_VAR
#define INTERRUPT_H_EXT
#else
#define INTERRUPT_H_EXT extern
#endif


/** @endcond*//***********************************************************************************
 * DEFINES
 *************************************************************************************************/


/*************************************************************************************************
 * MACRO's
 *************************************************************************************************/

/*-------------------------------------------------------------------------------------------*//**
 * @name        Implementacija za Intel x86 x64 arhitekturu
 * @{ *//*---------------------------------------------------------------------------------------*/

#if !defined(HAL_CRITICAL_DECL) || defined(__DOXYGEN__)
# define HAL_CRITICAL_DECL()													\
	extern C_UNUSED_VAR(uint8_t, ES_CONCAT(emptyVar, __LINE__))
#endif

#if !defined(HAL_CRITICAL_ENTER) || defined(__DOXYGEN__)
# define HAL_CRITICAL_ENTER()													\
	(void)0
#endif

#if !defined(HAL_CRITICAL_EXIT) || defined(__DOXYGEN__)
# define HAL_CRITICAL_EXIT()													\
	(void)0
#endif

/** @} *//*--------------------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------------------------*
 * C/C++ #ifdef - open
 *-----------------------------------------------------------------------------------------------*/
#ifdef __cplusplus
extern "C" {
#endif


/*************************************************************************************************
 * DATA TYPES
 *************************************************************************************************/


/*************************************************************************************************
 * GLOBAL VARIABLES
 *************************************************************************************************/


/*************************************************************************************************
 * FUNCTION PROTOTYPES
 *************************************************************************************************/


/*-----------------------------------------------------------------------------------------------*
 * C/C++ #endif - close
 *-----------------------------------------------------------------------------------------------*/
#ifdef __cplusplus
}
#endif


/*************************************************************************************************
 * CONFIGURATION ERRORS
 *************************************************************************************//** @cond */


/** @endcond *//**********************************************************************************
 * END of HEADER FILE
 *************************************************************************************************/
/** @} *//****************************************************************************************/
#endif /* INTERRUPT_H_ */
